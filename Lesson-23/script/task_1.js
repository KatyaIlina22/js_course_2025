// –ó–∞–¥–∞—á–∞ 1. –î–∞–Ω–æ –∫–ª–∞—Å PhoneNumber. –°—Ç–≤–æ—Ä–∏—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–æ string, –ø—Ä–∏ —è–∫–æ–º—É –Ω–∞ –æ—Å–Ω–æ–≤—ñ –Ω–æ–º–µ—Ä–∞ –≤–∏–≤–æ–¥–∏—Ç—å—Å—è –æ–ø–µ—Ä–∞—Ç–æ—Ä (050‚Ä¶.  ü°™ MTC, 096‚Ä¶ ü°™ Kyivstar, ‚Ä¶.)
if (confirm('–ü–æ—á–∞—Ç–∏ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è?')) {
    window.onload = function () {
        class PhoneNumber {
            constructor(number) {
                this.number = number
            }
            get operator() {
                if (this.number.startsWith('050') || this.number.startsWith('095'))
                    return 'MTC';
                if (this.number.startsWith('067') || this.number.startsWith('096'))
                    return 'Kyivstar';
                if (this.number.startsWith('073') || this.number.startsWith('093'))
                    return 'Lifecell';
                return '–ù–µ–≤—ñ–¥–æ–º–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä';
            }
            [Symbol.toPrimitive](hint) {
                if (hint === 'string') return `${this.operator}-${this.number} `
                return this.number
            }
        }
        const phoneNumber = new PhoneNumber("0508876367")
        document.write(` ${phoneNumber}`)
    }
}
